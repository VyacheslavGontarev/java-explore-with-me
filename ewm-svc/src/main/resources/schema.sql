CREATE TABLE IF NOT EXISTS users
(
    id    BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    email VARCHAR(256) UNIQUE NOT NULL,
    name  VARCHAR(250)  NOT NULL
    );

CREATE TABLE IF NOT EXISTS category
(
    id   BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR(256) UNIQUE NOT NULL
    );

CREATE TABLE IF NOT EXISTS events
(
    id                 BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    title              VARCHAR(120)  NOT NULL,
    annotation         VARCHAR(2000) NOT NULL,
    confirmed_requests BIGINT,
    category_id        BIGINT        NOT NULL,
    user_id            BIGINT        NOT NULL,
    description        VARCHAR(7000) NOT NULL,
    date               TIMESTAMP WITHOUT TIME ZONE,
    created_on         TIMESTAMP WITHOUT TIME ZONE,
    published_on       TIMESTAMP WITHOUT TIME ZONE,
    lat                FLOAT         NOT NULL,
    lon                FLOAT         NOT NULL,
    paid               BOOLEAN       NOT NULL,
    participant_limit  INT           NOT NULL,
    request_moderation BOOLEAN       NOT NULL,
    state              VARCHAR(30)   NOT NULL,
    views              BIGINT,
    FOREIGN KEY (category_id) REFERENCES category (id) ON DELETE CASCADE,
    FOREIGN KEY (user_id) REFERENCES users (id) ON DELETE CASCADE
    );

CREATE TABLE IF NOT EXISTS requests
(
    id       BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    event_id BIGINT      NOT NULL,
    user_id  BIGINT      NOT NULL,
    created  TIMESTAMP WITHOUT TIME ZONE,
    state    VARCHAR(30) NOT NULL,
    FOREIGN KEY (event_id) REFERENCES events (id) ON DELETE CASCADE,
    FOREIGN KEY (user_id) REFERENCES users (id) ON DELETE CASCADE
    );

CREATE TABLE IF NOT EXISTS compilations
(
    id       BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    pinned BOOLEAN NOT NULL,
    title    VARCHAR(50) NOT NULL
    );

CREATE TABLE IF NOT EXISTS events_compilations
(
    event_id BIGINT      NOT NULL,
    compilation_id  BIGINT      NOT NULL,
    PRIMARY KEY (event_id, compilation_id),
    FOREIGN KEY (event_id) REFERENCES events (id) ON DELETE CASCADE,
    FOREIGN KEY (compilation_id) REFERENCES compilations (id) ON DELETE CASCADE
    );